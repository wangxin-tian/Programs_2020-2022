<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace表示命名空间 -->
<mapper namespace="com.wangxin.ssm.mybatis.mapper.BookMapper">
    <!--定义⼀个映射：⼀个表映射到⼀个java类(com.wangxin.ssm.mybatis.model.Book)-->
    <!--表的列名称跟java模型类属性(property)名称完全⼀样,可以不⽤做映射-->
    <!--如果不⼀样,则需要做映射(resultMap)-->
    <resultMap id="bookResultMapper"
               type="com.wangxin.ssm.mybatis.model.Book">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="publisher" column="publisher" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DOUBLE"/>
    </resultMap>
    <!--根据图书编号获取图书信息 -->
    <select id="findBookById" parameterType="Integer" resultMap="bookResultMapper">
        select * from BOOKS where id = #{id};
    </select>
    <!--根据图书名模糊查询图书信息列表（concat将字符串参数连接起来）
             select * from BOOKS where LOWER(name) like concat('%',LOWER(#{value}),'%');-->
    <select id="findBookByName" parameterType="String"
            resultType="com.wangxin.ssm.mybatis.model.Book">
        select * from BOOKS where name like concat('%',#{name},'%');
    </select>
<!--    <select id="findBookById" resultType="String" parameterType="Integer">-->
<!--        select name from BOOKS where id=#{id}-->
<!--    </select>-->
    <!--查询图书信息列表-->
    <select id="findAllBook"
            resultType="com.wangxin.ssm.mybatis.model.Book">
        select * from BOOKS;
    </select>
    <!-- 添加图书信息 -->
    <insert id="addBook"
            parameterType="com.wangxin.ssm.mybatis.model.Book">
        insert into BOOKS(name,publisher,price)
        values(#{name},#{publisher},#{price});
    </insert>
    <!-- 更新图书信息 -->
    <update id="updateBook"
            parameterType="com.wangxin.ssm.mybatis.model.Book">
        update BOOKS set name=#{name},
                         publisher=#{publisher},
                         price=#{price}
        where id=#{id};
    </update>
    <!-- 删除图书 -->
    <delete id="deleteBook" parameterType="Integer">
        delete from BOOKS where id=#{id};
    </delete>
</mapper>